{"version":3,"file":"static/webpack/static/development/pages/index.js.28fcc6dfcb4132936818.hot-update.js","sources":["webpack:///./pages/useritems.js"],"sourcesContent":["import Layout from \"./components/layout\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport { Grommet, Heading, Anchor, Text, Box, Layer, Button } from \"grommet\";\nimport { Card } from \"grommet-controls\";\nimport { FormTrash, Edit } from 'grommet-icons';\nimport { dark } from \"grommet/themes\";\nimport { Disposer } from \"bluebird\";\n\n// const UserItems = ({ items }) => {\n//   UserItems.getInitialProps = async ({ req }) => {\n//     const res = await fetch(\"http://localhost:8080/api/items\");\n//     // console.log(\"ressssss\", res)\n//     const json = await res.json();\n//     return { items: json };\n//   };\n\nclass UserItems extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      name: \"\",\n      url: \"\",\n      description: \"\",\n      price: \"\",\n      category: \"\"\n    }\n  }\n\n  componentDidMount = e => {\n    fetch(\"http://localhost:8080/api/item\")\n      .then(response => {\n        return res.json()\n      })\n      .then(itemsData => {\n        this.setState({ items: itemsData })\n      })\n  }\n\n  // componentDidMount = e => {\n  //   e.preventDefault();\n  //   console.log(\"-----> USERITEM STATE\", this.state);\n  //   fetch(\"http://localhost:8080/api/items\", {\n  //     method: \"GET\",\n  //     headers: {\n  //       Accept: \"application/json\",\n  //       \"Content-Type\": \"application/json\"\n  //     },\n  //     body: JSON.stringify({\n  //       name: this.state.name.toLowerCase(),\n  //       url: this.state.url,\n  //       description: this.state.description.toLowerCase(),\n  //       price: this.state.price,\n  //       category: this.state.category.toLowerCase()\n  //     }),\n  //     credentials: \"include\"\n  //   })\n  //     .then(() => {\n  //       console.log(\"USERITEM LIST RENDERED\");\n  //     })\n  //     .catch(err => {\n  //       console.log(err);\n  //     });\n  // }\n\n\n\n  render() {\n    const { items } = this.state;\n\n    return (\n      <Grommet theme={dark}>\n        <Layout>\n          <Box key=\"wrapper\" direction=\"row\" wrap=\"true\" alignContent=\"between\">\n            {items.map(item => (\n              <Card\n                basis=\"medium\"\n                animation=\"fadeIn\"\n                background=\"dark-1\"\n                elevation=\"xxsmall\"\n                gap=\"small\"\n                margin=\"medium\"\n              >\n                <Card.CardTitle color=\"neutral-2\">{item.name}</Card.CardTitle>\n                <Card.CardContent color=\"dark-1\">\n                  <Text>{item.description}</Text>\n                  <Text>${item.price}</Text>\n                  <Text>{item.category}</Text>\n                  <Button\n                    icon={<Edit />}\n                    label=\"Edit\"\n                    onClick={() => { console.log('--->EDIT BUTTON FIRED') }}\n                  />\n                  <Button\n                    icon={<FormTrash />}\n                    label=\"Delete\"\n                    onClick={() => { console.log('--->DELETE BUTTON FIRED') }}\n                  />\n                </Card.CardContent>\n              </Card>\n            ))}\n          </Box>\n        </Layout>\n      </Grommet>\n    );\n  }\n}\n\n\nexport default UserItems;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAaA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAUA;AACA;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBA;AA+BA;;;;AAzFA;AACA;AA4FA;;;;A","sourceRoot":""}