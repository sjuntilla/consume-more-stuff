{"version":3,"file":"static/webpack/static/development/pages/items.js.2f54e4dfa183bec9eb85.hot-update.js","sources":["webpack:///./pages/components/header.js","webpack:///./pages/itemForm.js","webpack:///./pages/useritems.js"],"sourcesContent":["import Link from 'next/link';\nimport Layout from './layout';\nimport fetch from 'isomorphic-unfetch';\nimport Register from '../register';\nimport AddItem from '../itemForm';\nimport Items from '../items';\nimport UserItems from '../useritems';\nimport Index from '../index';\nimport Login from '../login';\nimport { Component } from 'react';\nimport { Grommet, Anchor, Box, Accordion, AccordionPanel, DropButton, Tabs, Tab, Layer, Button, FormField, TextInput, Select, TextArea, onClickOutside } from 'grommet';\nimport { dark } from 'grommet/themes';\n\n\nconst linkStyle = {\n    marginRight: 15,\n    textDecoration: \"none\"\n};\n\nconst PostLink = props => (\n    <Link as={`/p/${props.id}`} href={`/post?title=${props.title}`}>\n        <Anchor color=\"neutral-2\">{props.title}</Anchor>\n    </Link>\n);\n\nconst Header = () => (\n    <Grommet theme={dark}>\n        <Box\n            direction=\"row-responsive\"\n            fit=\"cover\"\n            pad=\"small\"\n            background=\"neutral-3\"\n        >\n            {/* TABS OPTION */}\n            <Tabs>\n                <Tab title=\"HOME\" />\n                <Tab title=\"ALL ITEMS\">\n                    <Items />\n                </Tab>\n                <Tab title=\"ADD ITEM\">\n                    <AddItem />\n                </Tab>\n                <Tab title=\"LOGIN\">\n                    <Login />\n                </Tab>\n                <Tab title=\"REGISTER\">\n                    <Register />\n                </Tab>\n            </Tabs>\n        </Box>\n\n        <style jsx>\n            {`\n        @import url(\"https://fonts.googleapis.com/css?family=Roboto\");\n\n        h1 {\n          font-family: \"Roboto\", sans-serif;\n          font-weight: bold;\n        }\n\n        body {\n          font-family: \"Roboto\", sans-serif;\n        }\n        ul {\n          background-color: #ddd;\n          margin: 5px;\n        }\n      `}\n        </style>\n    </Grommet>\n);\n\nexport default Header;\n","import Layout from \"./components/layout\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport { Box, Form, FormField, Select, Button, Layer, Grommet } from \"grommet\";\n//should only show when user is logged in\n\nclass AddItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            description: \"\",\n            price: \"\",\n            category: \"\"\n            // categories: [\"WELLNESS\", \"OFFICE\", \"ACCESSORIES\"]\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        console.log(\"-----> ITEM STATE\", this.state);\n        fetch(\"http://localhost:8080/api/items\", {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                name: this.state.name.toLowerCase(),\n                description: this.state.description.toLowerCase(),\n                price: this.state.price,\n                category: this.state.category.toLowerCase()\n            })\n        })\n            .then(() => {\n                console.log(\"ADDED ITEM TOOOOOO ITEM LIST\");\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    // delete = item => {\n    //   const name = this.state.name.filter(itemName => item !== itemName.name)\n    //   this.setState({ name })\n    // }\n\n    // deleteItem() {\n    //   fetch(\"http://localhost:8080/api/items\", {\n    //     method: \"DELETE\",\n    //     headers: {\n    //       Accept: \"application/json\",\n    //       \"Content-Type\": \"application/json\"\n    //     },\n    //     body: JSON.stringify({\n    //       name: this.state.name.toLowerCase(),\n    //       description: this.state.description.toLowerCase(),\n    //       price: this.state.price,\n    //       category: this.state.category.toLowerCase()\n    //     })\n    //   })\n    //     .then(() => {\n    //       console.log(\"DEEEEEELETEDDDDDD ITEM TOOOOOO ITEM LIST\");\n    //     })\n    //     .catch(err => {\n    //       console.log(err);\n    //     });\n    // }\n\n    handleChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n    render() {\n        return (\n            <Layer\n                position=\"right\"\n                width=\"large\"\n                full=\"vertical\"\n                modal={false}\n                animate=\"true\"\n                onClickOutside={this.onClose}\n                onEsc={this.onClose}\n            >\n                <Box pad=\"large\">\n                    <Form onSubmit={this.handleSubmit}>\n                        <FormField\n                            onChange={this.handleChange}\n                            name=\"name\"\n                            label=\"Product Name\"\n                            required={true}\n                        />\n                        <FormField\n                            onChange={this.handleChange}\n                            name=\"description\"\n                            label=\"Product Description\"\n                            required={true}\n                        />\n                        <FormField\n                            onChange={this.handleChange}\n                            name=\"price\"\n                            label=\"Product Price\"\n                            required={true}\n                        />\n                        <Select\n                            placeholder=\"Category\"\n                            onChange={this.handleChange}\n                            value={this.state.category}\n                            options={[\"WELLNESS\", \"OFFICE\", \"ACCESSORIES\"]}\n                            onChange={({ option }) => this.setState({ category: option })}\n                            name=\"category\"\n                            required={true}\n                        />\n\n                        <Button type=\"submit\" label=\"Add Item\" primary={true} />\n                        <Button type=\"delete\" label=\"Delete Item\" primary={true} />\n                    </Form>\n                </Box>\n            </Layer>\n        );\n    }\n}\nexport default AddItem;\n","import Layout from \"./components/layout\";\nimport fetch from \"isomorphic-unfetch\";\n\nimport Link from \"next/link\";\nimport { Grommet, Heading, Anchor, Text, Box, Layer } from \"grommet\";\nimport { Card } from \"grommet-controls\";\nimport { dark } from \"grommet/themes\";\nimport { Disposer } from \"bluebird\";\n\nconst UserItems = ({ items }) => {\n    return (\n        <Grommet theme={dark}>\n            <Layout>\n                <Box key=\"wrapper\" direction=\"row\" wrap=\"true\" alignContent=\"between\">\n                    {items.map(item => (\n                        <Card\n                            basis=\"medium\"\n                            animation=\"fadeIn\"\n                            background=\"dark-1\"\n                            elevation=\"xxsmall\"\n                            gap=\"small\"\n                            margin=\"medium\"\n                        >\n                            <Card.CardTitle color=\"neutral-2\">{item.name}</Card.CardTitle>\n                            <Card.CardContent color=\"dark-1\">\n                                <Text>{item.description}</Text>\n                                <Text>${item.price}</Text>\n                                <Text>{item.category}</Text>\n                            </Card.CardContent>\n                        </Card>\n                    ))}\n                </Box>\n            </Layout>\n        </Grommet>\n    );\n};\n\nUserItems.getInitialProps = async ({ req }) => {\n    const res = await fetch(\"http://localhost:8080/api/items\");\n    // console.log(\"ressssss\", res)\n    const json = await res.json();\n    return { items: json };\n};\n\n//THIS ALLOWS CLIENT TO DELETE ITEMS VIA BROWSER//\nremovedItem = id => {\n    const headers = { 'Content-Type': 'application/json' };\n    let itemData = { items: id };\n    // console.log(\"THIS IS THE CARD DATA\", cardData)\n    fetch(`/kanban`, { method: 'DELETE', body: JSON.stringify(itemData), headers })\n        .then(res => {\n            return fetch('http://localhost:8080/api/items')\n                .then((res) => { return res.json() })\n                .then((body) => { this.setState({ items: body }) })\n        })\n}\n\nexport default UserItems;"],"mappings":"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","sourceRoot":""}